YUI.add("flickr-photos-people-delete-deletor",function(e){"use strict";function t(e){var t={photo_id:e.photoId,user_id:e.userId,email:e.email};return t}function n(e){return e}function r(e,t){return t.callAPI("flickr.photos.people.delete",this._processParams(e)).then(null,function(e){throw t[e.fatal?"error":"debug"]("[flickr-photos-people-delete-deletor] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-photos-people-delete"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("person-in-photo-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{create:function(t){return e.ModelCreators["flickr-photos-people-add"].run(t,this.appContext)},"delete":function(t){return e.ModelDeletors["flickr-photos-people-delete"].run(t,this.appContext)}},attributes:{id:{},person:{isModel:!0},email:{},addedBy:{},coords:{setter:function(t){var n={x:NaN,y:NaN,w:NaN,h:NaN};return t&&e.merge(n,t),n}},personX:{readOnly:!0,getter:function(t,n){return e.flutil.photoCoords.denormX(this.getValue(n,"coords"))}},personY:{readOnly:!0,getter:function(t,n){return e.flutil.photoCoords.denormY(this.getValue(n,"coords"))}},personW:{readOnly:!0,getter:function(t,n){return e.flutil.photoCoords.denormW(this.getValue(n,"coords"))}},personH:{readOnly:!0,getter:function(t,n){return e.flutil.photoCoords.denormH(this.getValue(n,"coords"))}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-people-add-creator","flickr-photos-people-delete-deletor","flutil"]});
YUI.add("flickr-photos-people-getList-fetcher",function(e){"use strict";function t(t,n,r){var i=t[0],s=t[1],o=t[2],u=t[3],a=i.people&&i.people.person?i.people.person.length:0,f,l=[],c,h;return a>0&&i.people.person.forEach(function(t){h=t.nsid;if(!t.nsid||!u.exists(t.nsid))t.nsid&&(s.exists(t.nsid)?f=s.proxy(t.nsid):f=s.add(e.APIHelper.response.parsePerson(t))),c={addedBy:t.added_by,coords:e.flutil.photoCoords.normalize(t.x,t.y,t.w,t.h)},t.nsid?(c.id=t.nsid,c.person=f,h=t.nsid):t.email&&(h=e.guid(),c.email=t.email,c.id=h),u.add(c);l.push(u.proxy(h))}),o.exists(n)?o.setValue(n,"people",l):o.add({id:n,people:l}),o.proxy(n)}function n(t,n){var r=t.id,i={photo_id:r,extras:"icon_urls, paid_products"},s=this;return e.Promise.all([n.callAPI("flickr.photos.people.getList",i,!0),n.getModelRegistry("person-models"),n.getModelRegistry("photo-people-models"),n.getModelRegistry("person-in-photo-models")]).then(function(e){return s._processResponse(e,r,n.flipper)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-people-getList-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-photos-people-getList"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise","api-helper","flutil"],optional:["photo-people-models","person-in-photo-models"]});
YUI.add("photo-people-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-photos-people-getList"].run(t,this.appContext)}},attributes:{id:{},people:{isListProxy:!0}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-people-getList-fetcher"]});
YUI.add("flickr-photos-people-add-creator",function(e){"use strict";function t(t){var n={},r;return t.fullResponse?(n.photo_ids=t.photoId,n.user_ids=t.userId,n.full_response=1):(n.photo_id=t.photoId,n.user_id=t.userId),r=e.flutil.photoCoords.denormalize(t.coords),n.person_x=r.x,n.person_y=r.y,n.person_w=r.w,n.person_h=r.h,n}function n(e,t){var n=e[1],r=e[0],i;i=r.errors;if(!t.fullResponse)return{person:n,id:t.userId,addedBy:t.addedBy,coords:{}};if(i)return i}function r(t,n){var r=this;return t.fullResponse?e.Promise.all([n.callAPI("flickr.photos.people.add",this._processParams(t))]).then(function(e){return r._processResponse(e,t)},function(e){throw e.photoIds=t.photoId,e}):e.Promise.all([n.callAPI("flickr.photos.people.add",this._processParams(t)),n.getModel("person-models",t.userId)]).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-people.add-creator] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-photos-people-add"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","flutil"],optional:["photo-people-models","person-in-photo-models"]});
